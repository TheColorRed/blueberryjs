extends ../../partials/head.pug
block title
    title JavaScript Api &ndash; Ajax
block content
    .scrollspy#intro
        h2.header Ajax
        p.flow-text.card-panel Ajax is used in almost all applications now, making it basically impossible not to have it in your toolbox.
    //- The Ajax request method
    .scrollspy.section#ajax-request
        h4 Ajax.request()
        p Makes an ajax request to the provided url.
        pre: code.language-javascript.
            Ajax.request('/path/to/file.html');
        p The request can also take an object.
        ul
            li #[code url: #[code string]] The url to make the request to.
            li #[code method: #[code AjaxMethod]] The method to make the request as; acceptable values are:
                ul
                    li #[code AjaxMethod.Get] Sends a GET request
                    li #[code AjaxMethod.Post] Sends a POST request
                    li #[code AjaxMethod.Put] Currently sends a POST request
                    li #[code AjaxMethod.Patch] Currently sends a POST request
                    li #[code AjaxMethod.Delete] Currently sends a POST request
            li #[code data: #[code object]] The data to be sent to the server. If #[code method] is a #[code GET] request the data will be appended to the url as a querystring. Otherwise if #[code method] is anything else it will be sent as a payload.
            li #[code query: #[code object]] The querystring to be appended to the url. If #[code data] is also set and the method is a #[code GET], then the two will be combinded to make one querystring.
        pre: code.language-javascript.
            Ajax.request({
                url: '/path/to/file.html',
                method: AjaxMethod.Post,
                data: {test: 'some data'},
            );
    //- The success method
    .scrollspy.section#ajax-success
        h4 Ajax.success()
        p Executes a callback when the request was successful. Such as when a #[code 200] is returned.
        pre: code.language-javascript.
            Ajax.request('/path/to/file.html').success(response => {
                console.log(response.data);
                console.log(response.headers);
            });
    //- The error method
    .scrollspy.section#ajax-error
        h4 Ajax.error()
        p Executes a callback when the request was not successful. Such as when a #[code 200] is not returned.
        pre: code.language-javascript.
            Ajax.request('/path/to/file.html').error(response => {
                console.log(response.data);
                console.log(response.headers);
            });
    //- The complete method
    .scrollspy.section#ajax-complete
        h4 Ajax.complete()
        p Executes a callback when the request was completed. This callback will execute if the response was successful or if the response was not successful. It always runs.
        pre: code.language-javascript.
            Ajax.request('/path/to/file.html').complete(response => {
                console.log(response.data);
                console.log(response.headers);
            });
    //- The AjaxResponse class
    .scrollspy.section#ajaxresponse
        h2.header AjaxResponse
        h5 Getters
        ul.properties
            +property('code', 'number', 'The http response code that was returned during the http response.')
            +property('data', 'object', 'The data that was returned from the http response.')
            +property('headers', 'AjaxHeader[]', 'The headers that were returned from the http response.')
            +property('contentType', 'string', 'Gets the <b>Content-Type</b> header from the response.')
            +property('contentLength', 'string', 'Gets the <b> Content-Length</b> header from the response.')
            +property('server', 'string', 'Gets the <b> Server</b> header from the response.')
            +property('date', 'string', 'Gets the <b> Date</b> header from the response.')
            +property('lastModified', 'string', 'Gets the <b> Last-Modified</b> header from the response.')
    .scrollspy.section#ajaxresponse-getheader
        h4 AjaxResponse.getHeader()
        p Gets a specific header from the response.
        ul.properties
            +property('key', 'string', 'The header name to search for. This search is case insensitive.')
        +returnVal('AjaxHeader', 'A response header object.')
    .scrollspy.section#ajaxresponse-getheadervalue
        h4 AjaxResponse.getHeaderValue()
        p Gets a specific header value from the response.
        ul.properties
            +property('key', 'string', 'The header name to search for. This search is case insensitive.')
        +returnVal('string', 'The string value of the http header.')
    .scrollspy.section#ajaxheader
        h2.header AjaxHeader
        p The content of a single header.
        h5 Getters
        ul.properties
            +property('name', 'string', 'The name of the header')
            +property('value', 'string', 'The value of the header')
    .scrollspy.section#ajax-watch
        h2.thin Watch
        p When something needs to happen after multiple ajax requests are made, they can be watched. This will watch all requests and when they are all done, an event will be triggered.
    .scrollspy.section#ajax-watch-all
        h4.header Watch.all()
        p Watches a list of Ajax Requests.
        ul.properties
            +property('...toWatch', 'string[]', 'A list of requests to watch')
        pre: code.language-javascript.
            let req1 = Ajax.request('http://blueberryjs.com/1');
            let req2 = Ajax.request('http://blueberryjs.com/2');
            let req3 = Ajax.request('http://blueberryjs.com/3');
            Watch.all(req1, req2, req3);
    .scrollspy.section#ajax-watch-done
        h4.header Watch.done()
        p Once all of the request have completed, the done event is triggered. The done will contain an AjaxResponseList, which then can access each items AjaxResponse object.
        ul.properties
            +property('callback', 'Function', 'A callback to execute upon completion')
        pre: code.language-javascript.
            let req1 = Ajax.request('http://blueberryjs.com/1');
            let req2 = Ajax.request('http://blueberryjs.com/2');
            let req3 = Ajax.request('http://blueberryjs.com/3');
            Watch.all(req1, req2, req3).done(list => {
                let res1 = list.get(0); // Gets the response from the first request
                let res2 = list.get(1); // Gets the response from the second request
                let res3 = list.get(2); // Gets the response from the thrid request
            });
    .scrollspy.section#ajaxresponselist
        h2.thin AjaxResponseList
        p A list of ajax responses created by a watch.
    .scrollspy.section#ajaxresponselist-responses
        +def('AjaxResponseList.responses', 'A list of all the responses')
        +returnVal('AjaxResponse[]', 'All of the responses that from the requests')
        pre: code.language-javascript.
            let req1 = Ajax.request('http://blueberryjs.com/1');
            let req2 = Ajax.request('http://blueberryjs.com/2');
            Watch.all(req1, req2).done(list => {
                console.log(list.responses);
            });
    .scrollspy.section#ajaxresponselist-headers
        +def('AjaxResponseList.headers', 'A list of all the headers')
        +returnVal('Object[]', 'An array of request objects containing headers')
        pre: code.language-javascript.
            let req1 = Ajax.request('http://blueberryjs.com/1');
            let req2 = Ajax.request('http://blueberryjs.com/2');
            Watch.all(req1, req2).done(list => {
                console.log(list.headers);
            });
    .scrollspy.section#ajaxresponselist-get
        +def('AjaxResponseList.get()', 'Gets an AjaxResponse from the list of responses')
        ul.properties
            +property('index', 'number', 'The index of the request')
        +returnVal('AjaxResponse', 'The response from the request')
        pre: code.language-javascript.
            let req1 = Ajax.request('http://blueberryjs.com/1');
            let req2 = Ajax.request('http://blueberryjs.com/2');
            Watch.all(req1, req2).done(list => {
                console.log(list.get(0));
                console.log(list.get(1));
            });
    .scrollspy.section#ajaxresponselist-getResponseHeaders
        +def('AjaxResponseList.getResponseHeaders()', 'Gets an AjaxHeader[] from a response')
        ul.properties
            +property('index', 'number', 'The index of the request')
        +returnVal('AjaxHeader[]', 'The headers from the request')
        pre: code.language-javascript.
            let req1 = Ajax.request('http://blueberryjs.com/1');
            let req2 = Ajax.request('http://blueberryjs.com/2');
            Watch.all(req1, req2).done(list => {
                console.log(list.getResponseHeaders(0));
                console.log(list.getResponseHeaders(1));
            });
    .scrollspy.section#ajaxresponselist-findInEach
        +def('AjaxResponseList.findInEach()', 'Gets an object found in each response')
        ul.properties
            +property('key', 'string', 'The query selector to search the response for')
        +returnVal('any', 'The value from each object')
        pre: code.language-javascript.
            let req1 = Ajax.request('http://blueberryjs.com/1');
            let req2 = Ajax.request('http://blueberryjs.com/2');
            Watch.all(req1, req2).done(list => {
                console.log(list.findInEach('user[10]'));
            });
block sideContent
    ul.section.table-of-contents.pinned
        li: a(href='#intro') Introduction
        li Ajax
        li: a(href='#ajax-request') Ajax Request
        li: a(href='#ajax-success') Ajax Success
        li: a(href='#ajax-error') Ajax Error
        li: a(href='#ajax-complete') Ajax Complete
        li AjaxResponse
        li: a(href='#ajaxresponse') AjaxResponse
        li: a(href='#ajaxresponse-getheader') AjaxResponse Get Header
        li: a(href='#ajaxresponse-getheadervalue') AjaxResponse Get Header Value
        li AjaxHeader
        li: a(href='#ajaxheader') AjaxHeader
        li Watch
        li: a(href='#ajax-watch') Watch
        li: a(href='#ajax-watch-all') Watch All
        li: a(href='#ajax-watch-done') Watch Done
        li AjaxResponseList
        li: a(href='#ajaxresponselist') AjaxResponseList
        li: a(href='#ajaxresponselist-responses') All Responses
        li: a(href='#ajaxresponselist-headers') Get Headers
        li: a(href='#ajaxresponselist-get') Get a Response
        li: a(href='#ajaxresponselist-getResponseHeaders') Get Response Headers
        li: a(href='#ajaxresponselist-findInEach') Find in Each Response